{"title":"`seqspec` Tutorial: Parse Evercode WT v3 Dual-Indexed Library","markdown":{"yaml":{"title":"`seqspec` Tutorial: Parse Evercode WT v3 Dual-Indexed Library"},"headingText":"Summmary of Library Structure and Sequencing","containsRefs":false,"markdown":"\n:::{.highlight-section}\nFollow one of the following links to download a template seqspec according to the Parse WT kit that you used to generate your sequencing library:\n\n* **<a href=/seqspec/templates/Parse/v3/ParseV3_mini_template.yaml download>Parse Evercode WT Mini</a>**\n* **<a href=/seqspec/templates/Parse/v3/ParseV3_WT_template.yaml download>Parse Evercode WT</a>**\n* **<a href=/seqspec/templates/Parse/v3/ParseV3_mega_template.yaml download>Parse Evercode WT Mega</a>**  \n\nThen, follow this tutorial to tailor the seqspec to your dataset.\n:::\n\n![](parse_dual.png){width=1000 fig-align=\"center\"}\n\nAbove is a diagram of the **Parse Evercode WT v3 Dual-Indexed Library**. The library is structured as follows from 5' to 3':\n\n| Sequence           | Type   | Length   |\n|--------------------|:------:|:--------:|\n| Illumina P5 Primer | Fixed  | 29 bp    |\n| Illumina i5 Index  | Fixed  | 8 bp     |\n| Truseq Read 1      | Fixed  | 29 bp    |\n| cDNA               | Random | Variable |\n| Round 1 Barcode    | OnList | 8 bp     |\n| Linker             | Fixed  | 12 bp    |\n| Round 2 Barcode    | OnList | 8 bp     |\n| Linker             | Fixed  | 12 bp    |\n| Round 3 Barcode    | OnList | 8 bp     |\n| UMI                | Random | 10 bp    |\n| Truseq Read 2      | Fixed  | 34 bp    |\n| Illumina i7 Index  | Fixed  | 8 bp     |\n| Illumina P7 Primer | Fixed  | 24 bp    |\n\n<br>\n\nParse Biosciences recommends that the libary be sequenced in the following way:\n\n\n| Name    | Primer        | Cycles | Strand   | Coverage                 |\n|---------|---------------|--------|----------|--------------------------|\n| Read 1  | Truseq Read 1 | 64     | positive | cDNA                     |\n| Index 1 | Truseq Read 2 | 8      | positive | Illumina i7 Index        |\n| Index 2 | Truseq Read 1 | 8      | negative | Illumina i5 Index        |\n| Read 2  | Truseq Read 2 | 58     | negative | UMI + Barcodes + Linkers |\n\n<br>\n\n## Step 1: Fill in the Assay Info\nFill in the missing assay info according to the technology you used to sequence your library. For instance, if you used the **Illumina NextSeq 2000** sequencer with the **P3 reagent kit**, your assay info section would look like:\n\n``` yaml\n!Assay\nseqspec_version: 0.3.0\nassay_id: Parse-Evercode-WT-v3\nname: Dual-Indexed Parse Evercode WT v3\ndoi: https://support.parsebiosciences.com/hc/en-us/article_attachments/31841872776724\ndate: 2024-02-20\ndescription: Parse Evercode WT v3 using dual Illumina multiplex index\nmodalities: rna\nlib_struct: ##TBD##\nsequence_protocol: Illumina NextSeq 2000\nsequence_kit: Illumina NextSeq 2000 P3 XLEAP-SBS Reagent kit\nlibrary_protocol: Parse Evercode WT v3\nlibrary_kit: Parse Evercode WT v3\n```\n\n\n## Step 2: Alter the Sequence Spec\n### Update the Read Objects\nParse recommends that you sequence Read 1 to at least 64 nucleotides, but you may have decided to sequence to up to 150 nucleotides. If that is the case, you can modify the length of Read 1 by changing the 'min_len' and 'max_len' to reflect the read length. For example, if you want to sequence 150 nucleotides, upate the read as follows:\n\n``` yaml\n- !Read\n  read_id: read_1\n  name: Read 1\n  modality: rna\n  primer_id: truseq_read1\n  min_len: 150\n  max_len: 150\n  strand: pos\n  files:\n  - !File\n    ...\n```\n\nYou may have also decided not to sequence the sample indices if you did not sequence multiple samples at once. In this case, you should remove the Index 1 and Index 2 read objects.\n\n### Add in the file objects\n\nNext, for each read, you should fill out a file object referencing the corresponding file.\n\nA file object in seqspec if formatted as follows:\n\n``` yaml\n- !File\n      file_id: \n      filename:\n      filetype: \n      filesize: \n      url: \n      urltype: \n      md5: \n```\n\n**file_id, filetype, filename** — identifies and describes the file\n\n**filesize** - the size of the file\n\n**url** - (optional) the link to the file\n\n**urltype** - (optional) the type of url\n\n**md5** - (optional) MD5 fingerprint of data\n\n:::{.callout-note title=\"What does md5 stand for?\"}\nAn **MD5 checksum** is a short, unique string of letters and numbers generated from a file’s contents. It acts like a digital fingerprint — if even a single byte in the file changes, the checksum will be different.\n\nIncluding the MD5 value for your files allows others to verify data integrity after download or transfer, ensuring that the file has not been corrupted or altered.\n\nTo generate an MD5 checksum string, type into your command-line:\n\n```bash\nmd5sum <filepath> # For Linux\n\nmd5 <filepath> # For macOS\n\nGet-FileHash -Algorithm MD5 -Path <filepath> # For Windows\n```\n:::\n\n## Step 3: Alter the Library Spec\nYou can modify the `min_len` and `max_len` values for the cDNA region to reflect your desired read length. For example, if you want to sequence 150 nucleotides of cDNA, update the region as follows:\n\n``` yaml\n    - !Region\n        parent_id: rna\n        region_id: cdna\n        region_type: cdna\n        name: cDNA\n        sequence_type: random\n        sequence: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n        min_len: 150\n        max_len: 150\n        onlist: null\n        regions: null\n```\n\nAdjust the number of `X` characters in the `sequence` field to match the new length, and then adjust the full library sequence and length accordingly.\n\n``` yaml\nlibrary_spec:\n- !Region\n  region_id: rna\n  region_type: named\n  name: rna\n  sequence_type: joined\n  sequence: AATGATACGGCGACCACCGAGATCTACACNNNNNNNNTCTTTCCCTACACGACGCTCTTCCGATCTXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXNNNNNNNNGAGGTGGTTGGANNNNNNNNCTGACCCCTCATNNNNNNNNNNNNNNNNNNAGATCGGAAGAGCACACGTCTGAACTCCAGTCACNNNNNNNNATCTCGTATGCCGTCTTCTGCTTG\n  min_len: 342\n  max_len: 342\n  onlist: null\n  parent_id: null\n  regions:\n  - !Region\n  ...\n```\n:::{.emphasis}\nNow you have a complete seqspec file for your data. All that's left is to save it with your dataset!\n:::","srcMarkdownNoYaml":"\n:::{.highlight-section}\nFollow one of the following links to download a template seqspec according to the Parse WT kit that you used to generate your sequencing library:\n\n* **<a href=/seqspec/templates/Parse/v3/ParseV3_mini_template.yaml download>Parse Evercode WT Mini</a>**\n* **<a href=/seqspec/templates/Parse/v3/ParseV3_WT_template.yaml download>Parse Evercode WT</a>**\n* **<a href=/seqspec/templates/Parse/v3/ParseV3_mega_template.yaml download>Parse Evercode WT Mega</a>**  \n\nThen, follow this tutorial to tailor the seqspec to your dataset.\n:::\n\n## Summmary of Library Structure and Sequencing\n![](parse_dual.png){width=1000 fig-align=\"center\"}\n\nAbove is a diagram of the **Parse Evercode WT v3 Dual-Indexed Library**. The library is structured as follows from 5' to 3':\n\n| Sequence           | Type   | Length   |\n|--------------------|:------:|:--------:|\n| Illumina P5 Primer | Fixed  | 29 bp    |\n| Illumina i5 Index  | Fixed  | 8 bp     |\n| Truseq Read 1      | Fixed  | 29 bp    |\n| cDNA               | Random | Variable |\n| Round 1 Barcode    | OnList | 8 bp     |\n| Linker             | Fixed  | 12 bp    |\n| Round 2 Barcode    | OnList | 8 bp     |\n| Linker             | Fixed  | 12 bp    |\n| Round 3 Barcode    | OnList | 8 bp     |\n| UMI                | Random | 10 bp    |\n| Truseq Read 2      | Fixed  | 34 bp    |\n| Illumina i7 Index  | Fixed  | 8 bp     |\n| Illumina P7 Primer | Fixed  | 24 bp    |\n\n<br>\n\nParse Biosciences recommends that the libary be sequenced in the following way:\n\n\n| Name    | Primer        | Cycles | Strand   | Coverage                 |\n|---------|---------------|--------|----------|--------------------------|\n| Read 1  | Truseq Read 1 | 64     | positive | cDNA                     |\n| Index 1 | Truseq Read 2 | 8      | positive | Illumina i7 Index        |\n| Index 2 | Truseq Read 1 | 8      | negative | Illumina i5 Index        |\n| Read 2  | Truseq Read 2 | 58     | negative | UMI + Barcodes + Linkers |\n\n<br>\n\n## Step 1: Fill in the Assay Info\nFill in the missing assay info according to the technology you used to sequence your library. For instance, if you used the **Illumina NextSeq 2000** sequencer with the **P3 reagent kit**, your assay info section would look like:\n\n``` yaml\n!Assay\nseqspec_version: 0.3.0\nassay_id: Parse-Evercode-WT-v3\nname: Dual-Indexed Parse Evercode WT v3\ndoi: https://support.parsebiosciences.com/hc/en-us/article_attachments/31841872776724\ndate: 2024-02-20\ndescription: Parse Evercode WT v3 using dual Illumina multiplex index\nmodalities: rna\nlib_struct: ##TBD##\nsequence_protocol: Illumina NextSeq 2000\nsequence_kit: Illumina NextSeq 2000 P3 XLEAP-SBS Reagent kit\nlibrary_protocol: Parse Evercode WT v3\nlibrary_kit: Parse Evercode WT v3\n```\n\n\n## Step 2: Alter the Sequence Spec\n### Update the Read Objects\nParse recommends that you sequence Read 1 to at least 64 nucleotides, but you may have decided to sequence to up to 150 nucleotides. If that is the case, you can modify the length of Read 1 by changing the 'min_len' and 'max_len' to reflect the read length. For example, if you want to sequence 150 nucleotides, upate the read as follows:\n\n``` yaml\n- !Read\n  read_id: read_1\n  name: Read 1\n  modality: rna\n  primer_id: truseq_read1\n  min_len: 150\n  max_len: 150\n  strand: pos\n  files:\n  - !File\n    ...\n```\n\nYou may have also decided not to sequence the sample indices if you did not sequence multiple samples at once. In this case, you should remove the Index 1 and Index 2 read objects.\n\n### Add in the file objects\n\nNext, for each read, you should fill out a file object referencing the corresponding file.\n\nA file object in seqspec if formatted as follows:\n\n``` yaml\n- !File\n      file_id: \n      filename:\n      filetype: \n      filesize: \n      url: \n      urltype: \n      md5: \n```\n\n**file_id, filetype, filename** — identifies and describes the file\n\n**filesize** - the size of the file\n\n**url** - (optional) the link to the file\n\n**urltype** - (optional) the type of url\n\n**md5** - (optional) MD5 fingerprint of data\n\n:::{.callout-note title=\"What does md5 stand for?\"}\nAn **MD5 checksum** is a short, unique string of letters and numbers generated from a file’s contents. It acts like a digital fingerprint — if even a single byte in the file changes, the checksum will be different.\n\nIncluding the MD5 value for your files allows others to verify data integrity after download or transfer, ensuring that the file has not been corrupted or altered.\n\nTo generate an MD5 checksum string, type into your command-line:\n\n```bash\nmd5sum <filepath> # For Linux\n\nmd5 <filepath> # For macOS\n\nGet-FileHash -Algorithm MD5 -Path <filepath> # For Windows\n```\n:::\n\n## Step 3: Alter the Library Spec\nYou can modify the `min_len` and `max_len` values for the cDNA region to reflect your desired read length. For example, if you want to sequence 150 nucleotides of cDNA, update the region as follows:\n\n``` yaml\n    - !Region\n        parent_id: rna\n        region_id: cdna\n        region_type: cdna\n        name: cDNA\n        sequence_type: random\n        sequence: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n        min_len: 150\n        max_len: 150\n        onlist: null\n        regions: null\n```\n\nAdjust the number of `X` characters in the `sequence` field to match the new length, and then adjust the full library sequence and length accordingly.\n\n``` yaml\nlibrary_spec:\n- !Region\n  region_id: rna\n  region_type: named\n  name: rna\n  sequence_type: joined\n  sequence: AATGATACGGCGACCACCGAGATCTACACNNNNNNNNTCTTTCCCTACACGACGCTCTTCCGATCTXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXNNNNNNNNGAGGTGGTTGGANNNNNNNNCTGACCCCTCATNNNNNNNNNNNNNNNNNNAGATCGGAAGAGCACACGTCTGAACTCCAGTCACNNNNNNNNATCTCGTATGCCGTCTTCTGCTTG\n  min_len: 342\n  max_len: 342\n  onlist: null\n  parent_id: null\n  regions:\n  - !Region\n  ...\n```\n:::{.emphasis}\nNow you have a complete seqspec file for your data. All that's left is to save it with your dataset!\n:::"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"highlight-style":"ayu-dark","output-file":"parse_v3.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.8.25","theme":{"light":"flatly"},"mainfont":"Inter","fontsize":"1rem","linestretch":1.6,"toc-location":"left","title":"`seqspec` Tutorial: Parse Evercode WT v3 Dual-Indexed Library"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}
---
title: "`seqspec` Tutorial: Parse Evercode WT v3 Dual-Indexed Library"
---
:::{.highlight-section}
Follow one of the following links to download a template seqspec according to the Parse WT kit that you used to generate your sequencing library:

* **<a href=/seqspec/templates/Parse/v3/ParseV3_mini_template.yaml download>Parse Evercode WT Mini</a>**
* **<a href=/seqspec/templates/Parse/v3/ParseV3_WT_template.yaml download>Parse Evercode WT</a>**
* **<a href=/seqspec/templates/Parse/v3/ParseV3_mega_template.yaml download>Parse Evercode WT Mega</a>**  

Then, follow this tutorial to tailor the seqspec to your dataset.
:::

## Summmary of Library Structure and Sequencing
![](parse_dual.png){width=1000 fig-align="center"}

Above is a diagram of the **Parse Evercode WT v3 Dual-Indexed Library**. The library is structured as follows from 5' to 3':

| Sequence           | Type   | Length   |
|--------------------|:------:|:--------:|
| Illumina P5 Primer | Fixed  | 29 bp    |
| Illumina i5 Index  | Fixed  | 8 bp     |
| Truseq Read 1      | Fixed  | 29 bp    |
| cDNA               | Random | Variable |
| Round 1 Barcode    | OnList | 8 bp     |
| Linker             | Fixed  | 12 bp    |
| Round 2 Barcode    | OnList | 8 bp     |
| Linker             | Fixed  | 12 bp    |
| Round 3 Barcode    | OnList | 8 bp     |
| UMI                | Random | 10 bp    |
| Truseq Read 2      | Fixed  | 34 bp    |
| Illumina i7 Index  | Fixed  | 8 bp     |
| Illumina P7 Primer | Fixed  | 24 bp    |

<br>

Parse Biosciences recommends that the libary be sequenced in the following way:


| Name    | Primer        | Cycles | Strand   | Coverage                 |
|---------|---------------|--------|----------|--------------------------|
| Read 1  | Truseq Read 1 | 64     | positive | cDNA                     |
| Index 1 | Truseq Read 2 | 8      | positive | Illumina i7 Index        |
| Index 2 | Truseq Read 1 | 8      | negative | Illumina i5 Index        |
| Read 2  | Truseq Read 2 | 58     | negative | UMI + Barcodes + Linkers |

<br>

## Step 1: Fill in the Assay Info
Fill in the missing assay info according to the technology you used to sequence your library. For instance, if you used the **Illumina NextSeq 2000** sequencer with the **P3 reagent kit**, your assay info section would look like:

``` yaml
!Assay
seqspec_version: 0.3.0
assay_id: Parse-Evercode-WT-v3
name: Dual-Indexed Parse Evercode WT v3
doi: https://support.parsebiosciences.com/hc/en-us/article_attachments/31841872776724
date: 2024-02-20
description: Parse Evercode WT v3 using dual Illumina multiplex index
modalities: rna
lib_struct: ##TBD##
sequence_protocol: Illumina NextSeq 2000
sequence_kit: Illumina NextSeq 2000 P3 XLEAP-SBS Reagent kit
library_protocol: Parse Evercode WT v3
library_kit: Parse Evercode WT v3
```


## Step 2: Alter the Sequence Spec
### Update the Read Objects
Parse recommends that you sequence Read 1 to at least 64 nucleotides, but you may have decided to sequence to up to 150 nucleotides. If that is the case, you can modify the length of Read 1 by changing the 'min_len' and 'max_len' to reflect the read length. For example, if you want to sequence 150 nucleotides, upate the read as follows:

``` yaml
- !Read
  read_id: read_1
  name: Read 1
  modality: rna
  primer_id: truseq_read1
  min_len: 150
  max_len: 150
  strand: pos
  files:
  - !File
    ...
```

You may have also decided not to sequence the sample indices if you did not sequence multiple samples at once. In this case, you should remove the Index 1 and Index 2 read objects.

### Add in the file objects

Next, for each read, you should fill out a file object referencing the corresponding file.

A file object in seqspec if formatted as follows:

``` yaml
- !File
      file_id: 
      filename:
      filetype: 
      filesize: 
      url: 
      urltype: 
      md5: 
```

**file_id, filetype, filename** — identifies and describes the file

**filesize** - the size of the file

**url** - (optional) the link to the file

**urltype** - (optional) the type of url

**md5** - (optional) MD5 fingerprint of data

:::{.callout-note title="What does md5 stand for?"}
An **MD5 checksum** is a short, unique string of letters and numbers generated from a file’s contents. It acts like a digital fingerprint — if even a single byte in the file changes, the checksum will be different.

Including the MD5 value for your files allows others to verify data integrity after download or transfer, ensuring that the file has not been corrupted or altered.

To generate an MD5 checksum string, type into your command-line:

```bash
md5sum <filepath> # For Linux

md5 <filepath> # For macOS

Get-FileHash -Algorithm MD5 -Path <filepath> # For Windows
```
:::

## Step 3: Alter the Library Spec
You can modify the `min_len` and `max_len` values for the cDNA region to reflect your desired read length. For example, if you want to sequence 150 nucleotides of cDNA, update the region as follows:

``` yaml
    - !Region
        parent_id: rna
        region_id: cdna
        region_type: cdna
        name: cDNA
        sequence_type: random
        sequence: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
        min_len: 150
        max_len: 150
        onlist: null
        regions: null
```

Adjust the number of `X` characters in the `sequence` field to match the new length, and then adjust the full library sequence and length accordingly.

``` yaml
library_spec:
- !Region
  region_id: rna
  region_type: named
  name: rna
  sequence_type: joined
  sequence: AATGATACGGCGACCACCGAGATCTACACNNNNNNNNTCTTTCCCTACACGACGCTCTTCCGATCTXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXNNNNNNNNGAGGTGGTTGGANNNNNNNNCTGACCCCTCATNNNNNNNNNNNNNNNNNNAGATCGGAAGAGCACACGTCTGAACTCCAGTCACNNNNNNNNATCTCGTATGCCGTCTTCTGCTTG
  min_len: 342
  max_len: 342
  onlist: null
  parent_id: null
  regions:
  - !Region
  ...
```
:::{.emphasis}
Now you have a complete seqspec file for your data. All that's left is to save it with your dataset!
:::